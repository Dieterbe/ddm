= 0.5 =
 * fix get_exaile plugin
 * better documentation for helper functions and plugins like slidewindow, get_exaile etc (how they work, extendability, where to store, etc)
 * fix getopts so that 'ddm -a update -p -v .mozilla' (forgot -d) is spotted, and also stuff like -.mozilla or -mozilla should be spotted
 * 'wrap_rsync --delete? question' -> non-interactive rsyncing / commandline rsync parameter specifying? 
   important that we can do it sometimes and sometimes not, but not interactive please!
 * good way to specify what we want for 'static' selections (eg not where we use slidewindow, get_exaile or other specific functions).
   using a variable with a list of files/directories? find command?
 * good way to update (static) selections. (eg don't delete everything and then get everything again)
 * some error messages still need to go to stderr instead of stdout
 * dependency checking (svn,rsync,..) but only when needed (wrap_<foo> seems like a good place)
 * if something fails anywhere, don't echo_verbose, but echo (to stderr).
   in some cases abort operation or ask user if he wants to continue. add flag to never need manual user input.
 * allow defining some parameters in .ddm that will be used by ddm so that overriding callbacks is seldomly needed (eg make ddm more framework-esque)
 * make slidewindow work for any arbitrary path position. (eg slide over files, but also over directories contain files, or those dirs parents, etc)
 * make the subpath concept of slidewindow more generic.  put it in set_dataset_info + make functions to prepend subpath to all files in a list
 * bug: sometimes slidewindow will delete the series folder (and re-rsync) when having a setup like in the example
 * the consumed item is not always the last word of the command. make parameter to specify it, or how to find it in a flexible way (eg sed expression)
 * do more testing/fixing with slidewindow


= Someday =
 * implement backup action for extension
 * port to ... php? python?
 * ddmrc. now: shell code that gets sourced. someday: ini config file
 * ignore variables in a good format so that they can always be used by bash/rsync/svn/...
 * generic, inheritable functions to find "consumed" files (based on bash history, media player recent files file, ...). 
 * improve blob dataset type to not just rsync but make space efficient snapshots (and you must be able to choose a specific snapshot)
   Options (must still be reviewed and decided) :
   - git           git has a pretty efficient storage system, although it doesn't store owner/group, permissions, xattrs etc
     could help:
     * metastore     http://david.hardeman.nu/software.php#metastore
     * gibak         http://eigenclass.org/hiki/gibak-backup-system-introduction
   - fsvs          http://fsvs.tigris.org/
   - svk           http://svk.bestpractical.com/view/HomePage
   - scord         http://scord.sourceforge.net/
   - rsync wrapper http://www.mikerubel.org/computers/rsync_snapshots/ http://www.sanitarium.net/golug/rsync_backups.html
   - rsnapshot     http://rsnapshot.org/
   - rdiff-backup  http://www.nongnu.org/rdiff-backup/
 * better documentation for datasets: which are defined for which repository types? ( a table would be useful)
 * better documentation for actions: what does each action do by default for each dataset type? ( a table would be useful)
 * can we make wrappers more transparent? eg just intercept calls to rm,rsync,... instead of requiring 'wrap_'<foo> explicitly.
 * improve xdg-user-dir-alike structures without needing to specify anything in .ddm


= Undecided =
 * commit a selection? could be useful in some scenarios but how to implement ..  (rsync without --delete should do it in most cases)


= Ideas =
 * datasets that are multiple dataset types for different repo's (would this be useful?)
 * repositories that are a dataset for another repository (would this be useful?) 
 * several repositories for same media but different state (eg dirty and clean). eg:
   - audio-buffer dataset on client host with new, untagged media
   - "dirty audio" repo to push the audio-buffer to
   - "clean audio" repo to push clean (tagged) audio to from the dirty repo
   Other dirty repositories: eg 'Desktop', to backup up your Desktop temporarily, before moving data in appropriate places.