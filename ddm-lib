#!/bin/bash
source $XDG_CONFIG_HOME/ddm/ddmrc
if [ -z "$DDM_REMOTE" ]
then
	echo "You must set your \$DDM_REMOTE so I can know where to send files to"
fi

# TODO instead of aborting when already exists, compare checksums, if match, throw away local copy

# format of remotes list:
# <remote-id>[ <path>]
# no path-> empty path

function remote_check ()
{
	egrep -q "^$1[ |$]" $XDG_CONFIG_HOME/ddm/remotes
}

function remote_list ()
{
	cut -d ' ' -f1 $XDG_CONFIG_HOME/ddm/remotes
}

# returns empty string for undefined remotes, or remotes without path specified
function remote_get_path ()
{
	awk "/^$1 / {print \$2}" $XDG_CONFIG_HOME/ddm/remotes
}

function usage ()
{
	echo "$0 kind file/directory name"
	echo -e "kind: a \"repository identifier\" that you have defined in your \$XDG_CONFIG_HOME/ddm/remotes.  Ie one of:\n`remote_list`"
	exit 1
}


function buffer ()
{
	echo "moving file/directory $file ..."
	mkdir -p $XDG_DATA_HOME/ddm/buffer/$kind/ || exit 2
	if [ -e $XDG_DATA_HOME/ddm/buffer/$kind/$file ]
	then
		echo "file $file already exists. aborting"
		exit 1
	fi
	if [ `readlink -f $file` = "$(readlink -f $XDG_DATA_HOME/ddm/buffer/$kind/`basename $file`)" ];
	then
		echo "$file is already in the buffer. leaving it"
		return 0
	fi
	if mv $file $XDG_DATA_HOME/ddm/buffer/$kind/
	then
		echo "moving success"
		return 0
	fi
	echo "moving failed"
	return 1
}

function submit ()
{
	path=`remote_get_path $kind`

	if ! ssh $DDM_REMOTE "mkdir -p $path"
	then
		echo "could not create/verify $DDM_REMOTE:$path"
		exit 2
	fi
	if ssh $DDM_REMOTE "[ -e $path/$file ]"
	then
		echo "file $DDM_REMOTE:$path/$file already exists. aborting"
		exit 1
	fi
	echo "submitting file $file ..."
	if scp -rp "$file" $DDM_REMOTE:$path/
	then
		rm -rfv "$file"
		echo "submission success"
		return 0
	fi
	echo "submission failed"
	return 1
}

